@model Books.Models.ViewModels.BookFormViewModel
@{
    ViewBag.Title = "Create";
}
<br />
<h2 class="text-dark">
    @(Model.Id == 0 ? "Add New Book" : "Edit Book")
</h2>

<br />

@using (Html.BeginForm("Save", "Books"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div class="form-group mb-4">
        @Html.LabelFor(m => m.Title, new { @class = "mb-2" })
        @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger" })
    </div>

    <div class="form-group mb-4">
        @Html.LabelFor(m => m.Author, new { @class = "mb-2" })
        @Html.TextBoxFor(m => m.Author, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Author, null, new { @class = "text-danger" })
    </div>

    <div class="form-group mb-4">
        @Html.LabelFor(m => m.CategoryId, new { @class = "mb-2" })
        @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.Categories, "Id", "Name"), " ", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
    </div>

    <div class="form-group mb-4">
        @Html.LabelFor(m => m.Description, new { @class = "mb-2" })
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
    </div>
    <button type="submit" class="btn btn-dark">Save</button>
}
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
